---

- name: Find any previously backed-up .war files
  find: file_type=file paths="/usr/local/{{ project_name }}/webapps" patterns="{{ project_name}}.war_*"
  register: war_file_backups

- name: Remove any previous .war file back-ups that were found
  file: path="{{ item.path }}" state=absent
  with_items: "{{ war_file_backups.files }}"
  when: war_file_backups is defined

- name: Back-up existing build artifact if necessary
  shell: >
    mv /usr/local/{{ project_name }}/webapps/{{ project_name }}.war
    /usr/local/{{ project_name }}/webapps/{{ project_name }}.war_`date +%Y%m%d%H%M%S`
    removes=/usr/local/{{ project_name }}/webapps/{{ project_name }}.war

- name: Stop Tomcat Instance
  service: name={{ project_name }} state=stopped

- name: Remove webapp deployed folder
  file: path=/usr/local/{{ project_name }}/webapps/{{ project_name }} state=absent

- name: Copy build artifact from sftp_server_name to project_target_path
  shell: >
    (
    echo "get {{ project_name }}/{{ project_name }}.war /usr/local/{{ project_name }}/webapps/{{ project_name }}.war" ;
    echo "bye"
    ) | sftp -oIdentityFile={{ ansible_ident_file }} -b - {{ sftp_username }}@{{ sftp_server_name }}:{{ sftp_path }}
  args:
    executable: /bin/bash
  register: sftp_status
  failed_when: "sftp_status.rc != 0"

- name: Set ownership on build artifact
  file: path=/usr/local/{{ project_name }}/webapps/{{ project_name }}.war owner={{ project_name }} group={{ project_name }}

- name: Start Tomcat Instance
  service: name={{ project_name }} state=started
